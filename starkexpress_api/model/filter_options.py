# coding: utf-8

"""
    StarkExpress API Docs

    An API for the StarkExpress platform.  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from starkexpress_api import schemas  # noqa: F401


class FilterOptions(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        enum_value_to_name = {
            "StartsWith": "STARTS_WITH",
            "EndsWith": "ENDS_WITH",
            "Contains": "CONTAINS",
            "DoesNotContain": "DOES_NOT_CONTAIN",
            "IsEmpty": "IS_EMPTY",
            "IsNotEmpty": "IS_NOT_EMPTY",
            "IsGreaterThan": "IS_GREATER_THAN",
            "IsGreaterThanOrEqualTo": "IS_GREATER_THAN_OR_EQUAL_TO",
            "IsLessThan": "IS_LESS_THAN",
            "IsLessThanOrEqualTo": "IS_LESS_THAN_OR_EQUAL_TO",
            "IsEqualTo": "IS_EQUAL_TO",
            "IsNotEqualTo": "IS_NOT_EQUAL_TO",
        }
    
    @schemas.classproperty
    def STARTS_WITH(cls):
        return cls("StartsWith")
    
    @schemas.classproperty
    def ENDS_WITH(cls):
        return cls("EndsWith")
    
    @schemas.classproperty
    def CONTAINS(cls):
        return cls("Contains")
    
    @schemas.classproperty
    def DOES_NOT_CONTAIN(cls):
        return cls("DoesNotContain")
    
    @schemas.classproperty
    def IS_EMPTY(cls):
        return cls("IsEmpty")
    
    @schemas.classproperty
    def IS_NOT_EMPTY(cls):
        return cls("IsNotEmpty")
    
    @schemas.classproperty
    def IS_GREATER_THAN(cls):
        return cls("IsGreaterThan")
    
    @schemas.classproperty
    def IS_GREATER_THAN_OR_EQUAL_TO(cls):
        return cls("IsGreaterThanOrEqualTo")
    
    @schemas.classproperty
    def IS_LESS_THAN(cls):
        return cls("IsLessThan")
    
    @schemas.classproperty
    def IS_LESS_THAN_OR_EQUAL_TO(cls):
        return cls("IsLessThanOrEqualTo")
    
    @schemas.classproperty
    def IS_EQUAL_TO(cls):
        return cls("IsEqualTo")
    
    @schemas.classproperty
    def IS_NOT_EQUAL_TO(cls):
        return cls("IsNotEqualTo")
